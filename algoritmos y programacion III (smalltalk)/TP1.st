Object subclass: #AlgoRemis	instanceVariableNames: 'conductores destinos'	classVariableNames: ''	package: 'TP1'!!AlgoRemis methodsFor: 'initialization' stamp: 'Agus 10/7/2021 22:39'!initialize 	conductores := OrderedCollection new.	destinos := OrderedCollection new.! !!AlgoRemis methodsFor: 'as yet unclassified' stamp: 'Agus 10/14/2021 15:46'!crearViajeConDestino: nombreDestino aKms: cantKm peajes: cantPeajes 	|destino|	destino := Viaje new.	destino nombreDestinoEs: nombreDestino estaAKm: cantKm yestaAPeajes: cantPeajes.	destinos add: destino.! !!AlgoRemis methodsFor: 'as yet unclassified' stamp: 'Agus 10/14/2021 15:47'!registrarChoferDeAutoElectrico: nombreChofer conTarifaInicial: tarifaInicial	|chofer|	chofer := Chofer new.	chofer conNombre: nombreChofer autoElectricoConTarifaInicial: tarifaInicial.	conductores add: chofer.! !!AlgoRemis methodsFor: 'as yet unclassified' stamp: 'Agus 11/9/2021 15:51'!viajeMasBaratoParaDestino: nombreDes	| destinoBuscado choferBuscado |	destinoBuscado := destinos detect: [ :d| d tieneNombre: nombreDes] ifNone: [ DestinoInexistente signal ].	choferBuscado := conductores detectMin: [ :c| c calcularPrecioConDestino: destinoBuscado.].	destinoBuscado choferEs: choferBuscado.	^ destinoBuscado	! !!AlgoRemis methodsFor: 'as yet unclassified' stamp: 'Agus 10/14/2021 15:47'!registrarChoferDeAuto: nombreChofer conTarifaInicial: tarifaInicial	|chofer|	chofer := Chofer new.	chofer conNombre: nombreChofer autoNormalConTarifaInicial: tarifaInicial.	conductores add: chofer.! !Object subclass: #AutoElectrico	instanceVariableNames: 'tarifa_peaje precio_km'	classVariableNames: ''	package: 'TP1'!!AutoElectrico methodsFor: 'initialization' stamp: 'Agus 10/8/2021 17:45'!initialize 	tarifa_peaje := 50.	precio_km := 30.! !!AutoElectrico methodsFor: 'as yet unclassified' stamp: 'Agus 10/8/2021 17:58'!tarifaPeaje	^tarifa_peaje! !!AutoElectrico methodsFor: 'as yet unclassified' stamp: 'Agus 10/8/2021 17:58'!precioKm	^precio_km ! !Object subclass: #AutoNormal	instanceVariableNames: 'tarifa_peaje precio_km'	classVariableNames: ''	package: 'TP1'!!AutoNormal methodsFor: 'initialization' stamp: 'Agus 10/8/2021 17:45'!initialize 	tarifa_peaje := 100.	precio_km := 50.! !!AutoNormal methodsFor: 'as yet unclassified' stamp: 'Agus 10/8/2021 17:56'!tarifaPeaje	^tarifa_peaje! !!AutoNormal methodsFor: 'as yet unclassified' stamp: 'Agus 10/8/2021 17:56'!precioKm	^precio_km ! !Error subclass: #CantidadInvalida	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Chofer	instanceVariableNames: 'nombre auto tarifa_inicial'	classVariableNames: ''	package: 'TP1'!!Chofer methodsFor: 'as yet unclassified' stamp: 'Agus 10/11/2021 23:24'!conNombre: nombreChofer autoNormalConTarifaInicial: tarifaInicial	(tarifaInicial < 0) ifTrue: [ TarifaInvalida signal ].	nombre := nombreChofer.	tarifa_inicial := tarifaInicial.	auto := AutoNormal new.! !!Chofer methodsFor: 'as yet unclassified' stamp: 'Agus 10/14/2021 15:47'!conNombre: nombreChofer autoElectricoConTarifaInicial: tarifaInicial	(tarifaInicial < 0) ifTrue: [ TarifaInvalida signal ].	nombre := nombreChofer.	tarifa_inicial := tarifaInicial.	auto := AutoElectrico new.! !!Chofer methodsFor: 'as yet unclassified' stamp: 'Agus 11/8/2021 02:32'!calcularPrecioConDestino: destino	|cantKm cantPj|	cantKm := destino cantKilometros.	cantPj := destino cantPeajes.	^ ((tarifa_inicial + (cantKm  * auto precioKm) + (cantPj * auto tarifaPeaje )) * destino descuento)! !!Chofer methodsFor: 'initialization' stamp: 'Agus 10/4/2021 21:27'!nombre 	^ nombre.! !Object subclass: #Descuento	instanceVariableNames: 'valor'	classVariableNames: ''	package: 'TP1'!!Descuento methodsFor: 'accessing' stamp: 'Agus 11/6/2021 22:31'!valor 	self subclassResponsibility.! !!Descuento methodsFor: 'accessing' stamp: 'Agus 11/11/2021 20:02'!asignarDescuento: nombreDest	| destinoModificado |	destinoModificado  := (nombreDest asString asUppercase).	(destinoModificado  includesSubstring: 'HOSPITAL') ifTrue: [ ^ DescuentoHospital new ].	^ DescuentoNulo new.! !Descuento subclass: #DescuentoHospital	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!DescuentoHospital methodsFor: 'initialization' stamp: 'Agus 11/6/2021 22:29'!initialize 	valor := 0.2.! !!DescuentoHospital methodsFor: 'initialization' stamp: 'Agus 11/6/2021 22:30'!valor 	^ valor.! !Descuento subclass: #DescuentoNulo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!DescuentoNulo methodsFor: 'accessing' stamp: 'Agus 11/6/2021 22:30'!valor 	^ valor.! !!DescuentoNulo methodsFor: 'initialization' stamp: 'Agus 11/6/2021 22:29'!initialize 	valor := 1.! !Error subclass: #DestinoInexistente	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Error subclass: #TarifaInvalida	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Viaje	instanceVariableNames: 'kilometros peajes destino chofer descuento'	classVariableNames: ''	package: 'TP1'!!Viaje methodsFor: 'as yet unclassified' stamp: 'Agus 10/9/2021 02:26'!tieneNombre: nombreDes	^destino asString asUppercase = (nombreDes asString asUppercase)! !!Viaje methodsFor: 'as yet unclassified' stamp: 'Agus 10/4/2021 20:59'!cantKilometros 	^ kilometros.! !!Viaje methodsFor: 'as yet unclassified' stamp: 'Agus 10/8/2021 18:22'!choferEs: elChofer 	chofer := elChofer.! !!Viaje methodsFor: 'as yet unclassified' stamp: 'Agus 11/11/2021 19:16'!nombreDestinoEs: nombreDest estaAKm: cantKm yestaAPeajes: cantPj	|nuevoDescuento|	(cantKm  < 0) ifTrue: [ CantidadInvalida  signal ].	(cantPj < 0) ifTrue: [ CantidadInvalida  signal ].	nuevoDescuento := Descuento new.	descuento := nuevoDescuento asignarDescuento: nombreDest.	destino := nombreDest.	kilometros := cantKm.	peajes := cantPj.	! !!Viaje methodsFor: 'as yet unclassified' stamp: 'Agus 10/4/2021 20:59'!cantPeajes	^ peajes.! !!Viaje methodsFor: 'accessing' stamp: 'Agus 10/8/2021 18:23'!chofer	^ chofer nombre.! !!Viaje methodsFor: 'accessing' stamp: 'Agus 11/6/2021 21:50'!precio	^ chofer calcularPrecioConDestino: self.! !!Viaje methodsFor: 'accessing' stamp: 'Agus 11/8/2021 02:33'!descuento 	^ descuento valor.	"comentario sobre esta parte del codigo, entiendo que puede violar el encapsulamiento llamar al metodo valor de descuento, 	pero lo que pense es que se volveria demasiado rebuscado si le delegara a descuento calcular el precio, ya que  deberia ser	una clase que no tenga esa responsabilidad"! !